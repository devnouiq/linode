{{- range $appName, $appConfig := .Values.apps }}
{{- if and $appConfig.enabled (not (and (eq $appName "mysql") $appConfig.useStatefulSet)) }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $.Values.tenantId }}-{{ $appName }}
  labels:
    app.kubernetes.io/name: "{{ $.Chart.Name }}-{{ $appName }}"
    app.kubernetes.io/instance: "{{ $.Release.Name }}"
    app.kubernetes.io/version: "{{ $.Chart.AppVersion }}"
    app.kubernetes.io/managed-by: "{{ $.Release.Service }}"
    app: {{ $.Values.tenantId }}-{{ $appName }}
spec:
  replicas: {{ $appConfig.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: "{{ $.Chart.Name }}-{{ $appName }}"
      app.kubernetes.io/instance: "{{ $.Release.Name }}"
      app: {{ $.Values.tenantId }}-{{ $appName }}
  template:
    metadata:
      annotations:
        {{- toYaml $appConfig.podAnnotations | nindent 8 }}
      labels:
        app.kubernetes.io/name: "{{ $.Chart.Name }}-{{ $appName }}"
        app.kubernetes.io/instance: "{{ $.Release.Name }}"
        app: {{ $.Values.tenantId }}-{{ $appName }}
    spec:
      {{- if $appConfig.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml $appConfig.imagePullSecrets | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ if and $appConfig.serviceAccount (hasKey $appConfig.serviceAccount "create") $appConfig.serviceAccount.create }}{{ $.Values.tenantId }}-{{ $appName }}{{ else }}default{{ end }}
      securityContext:
        {{- toYaml $appConfig.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ $appName }}
          securityContext:
            {{- toYaml $appConfig.securityContext | nindent 12 }}
          image: "{{ $appConfig.image.repository }}:{{ $appConfig.image.tag }}"
          imagePullPolicy: {{ $appConfig.image.pullPolicy }}
          env:
            - name: ENVIRONMENT
              value: "{{ $.Values.tenantId }}"
          {{- if eq $appName "wordpress" }}
            - name: WORDPRESS_DB_HOST
              value: "{{ $.Values.tenantId }}-mysql.{{ $.Values.tenantId }}.svc.cluster.local"
            - name: WORDPRESS_DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mysql-secret
                  key: MYSQL_ROOT_PASSWORD
            - name: WORDPRESS_DB_USER
              value: root
            - name: WORDPRESS_DB_NAME
              value: mysql
          {{- end }}
          ports:
            - name: http
              containerPort: {{ if and (hasKey $appConfig "service") (hasKey $appConfig.service "port") }}{{ $appConfig.service.port | default 80 }}{{ else }}80{{ end }}
              protocol: TCP
          resources:
            {{- toYaml $appConfig.resources | nindent 12 }}
          {{- if eq $appName "wordpress" }}
          volumeMounts:
            - name: wordpress-data
              mountPath: /var/www/html
          {{- end }}
      nodeSelector:
        {{- toYaml $.Values.global.nodeSelector | nindent 8 }}
      affinity:
        {{- toYaml $appConfig.affinity | nindent 8 }}
      tolerations:
        {{- toYaml $.Values.global.tolerations | nindent 8 }}
      {{- if eq $appName "wordpress" }}
      volumes:
        - name: wordpress-data
          persistentVolumeClaim:
            claimName: wordpress-pvc
      {{- end }}
{{- end }}
{{- end }}
